---
# Create Kali Linux basebox
- name: Download zip
  get_url:
    url: "{{ urlbase }}/{{ ova_file }}"
    dest: "{{ ansible_user_dir }}/Downloads/{{ ova_file }}"
    checksum: "{{ ova_checksum }}"
- name: Import the Kali appliance
  command: VBoxManage import {{ ansible_user_dir }}/Downloads/{{ ova_file }}
  args:
    creates: "{{ ansible_user_dir }}/VirtualBox VMs/{{ vmname }}"
- name: Disable settings we don't want
  command: VBoxManage modifyvm "{{ ova_vmname }}" --usbehci off --vram 6 --ostype Linux_64 --longmode on
- name: Enable settings we need
  command: VBoxManage modifyvm "{{ ova_vmname }}" --vram 6 --ostype Linux_64 --longmode on --natpf1 "SSH,tcp,127.0.0.1,2201,,22"
- name: Start the vm
  command: VBoxManage startvm "{{ ova_vmname }}"
- name: The following steps have to be completed manually before continuing.
  vars:
    msg: |
         login as root (password: toor)

           systemctl enable ssh
           systemctl start ssh
           useradd -b /home -U -m -s /bin/bash vagrant
           passwd vagrant
           su vagrant -c "mkdir -m 700 /home/vagrant/.ssh"
           echo 'vagrant	ALL=(ALL:ALL) NOPASSWD:ALL' > /etc/sudoers.d/vagrant
           apt-get update
           apt-get install -y aptitude

         Then, from the host OS, upload the public ssh key for the vagrant user with:

           scp -P 2201 ~/keys/vagrant.pub vagrant@localhost:/home/vagrant/.ssh/authorized_keys

  debug:
    msg: "{{ msg.split('\n') }}"
- pause:
    prompt: "Press Ctrl-C when you have completed the steps above."
- name: Delete any exiting .box file
  file:
    path: "{{ ansible_env.PWD }}/../packer/{{ vmname }}.box"
    state: absent
- name: Package the base box
  command: vagrant package --base {{ ova_vmname }} --output {{ ansible_env.PWD }}/../packer/{{ vmname }}.box
